<document xmlns="http://cnx.rice.edu/cnxml">

<title>Implementation &amp; Solutions</title>
<metadata xmlns:md="http://cnx.rice.edu/mdml">
  <md:content-id>m36379</md:content-id>
  <md:title>Implementation &amp; Solutions</md:title>
  <md:abstract>Implementation and solutions for ELEC301 Viola-Jones-based facial detection and feature recognition project.
This module is part of a collection.</md:abstract>
  <md:uuid>18199da0-1370-4e6f-93f8-9af11fe35275</md:uuid>
</metadata>
<featured-links>
  <!-- WARNING! The 'featured-links' section is read only. Do not edit below.
       Changes to the links section in the source will not be saved. -->
    <link-group type="supplemental">
      <link url="http://www.mathworks.com/matlabcentral/fileexchange/27150-face-detector-boosting-haar-features" strength="3">Algorithm implemented in Matlab</link>
    </link-group>
  <!-- WARNING! The 'featured-links' section is read only. Do not edit above.
       Changes to the links section in the source will not be saved. -->
</featured-links>
<content>
  <para id="delete_me">Our starting base for the Viola-Jones algorithm was the Matlab code by Vahid Kazemi available <link url="http://www.mathworks.com/matlabcentral/fileexchange/27150-face-detector-boosting-haar-features" window="new">here</link>.

While Kazemiâ€™s code provided a strong basis for detection of front-face potraits, we made several additions and adjustments to implement better and more feature detection techniques.

We adjusted several parameters to optimize facial detection. In our case, timing was less of a priority, and we decided we could afford a longer calculation time in order to gain more accuracy in facial detection. To do this, we decreased the step size of the detector moving across an image to match it against the training data. We also made changes to several other parameters, such as scaling size of the picture, and the minimum and maximum tolerances we had for scaling to optimize the data.

To build upon the Viola-Jones algorithm, we also wrote code for greater feature detection. We wrote a program for the detection of the colors of faces. The Viola-Jones algorithm detects the locations of each face and forms a rectangular box around the face based on its size. This box stretches from the top of the eyes to the bottom of the mouth and across the width of the face. By finding the matrix of Red, Green, and Blue (RGB) values across each rectangle, we can find the average color and shade of each face. We can then average the RGB values for each face and plot them separately to characterize the different facial colors and shades.

We have also used this color recognition for hair color detection. Unlike face color though, the Viola-Jones algorithm does not form a box around the hair for each person. Moreover, the locations of hair for each individual varies. For example, while those with long hair will have much of their hair on the two sides of their head, while those with shorter hair will not. In this case, we determined that most people with hair have some hair directly at the top of their heads. We then used formed determinants of rectangles above the face locations to where the top of the head hair locations were, and averaged the RGB colors in those determinants. 

<figure id="cute-dog"><media id="dogpic" alt="A dog sitting on a bed">
    <image mime-type="image/jpeg" src="../../media/glee.jpg"/>
  </media>
  
<caption>Example of hair detection.
  </caption></figure>
</para>
</content>

</document>